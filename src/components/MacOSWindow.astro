---
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import { Icon } from "astro-icon/components";

interface Props {
    imagePath: string;
    altText: string;
    windowTitle: string;
    id: string;
}

const { imagePath, altText, windowTitle, id } = Astro.props;

const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/*.{jpeg,jpg,png,gif}');
if (!images[imagePath]) throw new Error(`"${imagePath}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`);
---

<macos-window data-id={id} class="w-full">
    <div class="w-full px-2 h-[2.375rem] rounded-t-lg border border-dark-purple dark:border-white bg-[#d4d0cb] flex relative" id={id}>
        <div class="h-full flex flex-row items-center gap-x-1.5 absolute">
            <span class="w-3 h-3 rounded-full bg-[#FE5E56]"></span>
            <span class="w-3 h-3 rounded-full bg-[#FCBD2F]"></span>
            <span class="w-3 h-3 rounded-full bg-[#25C73E]"></span>
        </div>
        <div class="h-full flex flex-row items-center mx-auto gap-x-0.5" id={id + "-title"}>
            <Icon name="folderIcon" class="w-[27.5px] h-[26.5px] shrink-0"/>
            <p class="font-sans font-bold text-xs text-black truncate ...">
                {windowTitle}
            </p>
        </div>
    </div>

    <div class="w-full h-[20.125rem]">
        <Image src={images[imagePath]()} class="object-cover h-full w-full rounded-b-lg border-x border-b border-dark-purple dark:border-white" alt={altText} loading="eager"/>
    </div>
</macos-window>

<script>
    const addCSS = (css: string) => {
        return document.head.appendChild(document.createElement("style")).innerHTML = css;
    };

    class MacOSWindow extends HTMLElement {
        connectedCallback() {
            requestAnimationFrame(() => {
                const minSize = ((document.getElementById(this.dataset.id + "-title")?.clientWidth ?? 0) + 108);

                const projectContainerStyle = `#${this.dataset.id} {\n\tcontainer: ${this.dataset.id} / inline-size;\n}` + "\n\n" + `@container ${this.dataset.id} (width <= ${minSize}px) {\n\t#${this.dataset.id + "-title"} {\n\t\tmargin-left: 54px;\n\t\toverflow: hidden;\n\t}\n}`

                addCSS(projectContainerStyle);
            })
        }
    }

    customElements.define('macos-window', MacOSWindow);
</script>